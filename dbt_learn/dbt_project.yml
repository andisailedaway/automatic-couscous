
# # Name your project! Project names should contain only lowercase characters
# # and underscores. A good package name should reflect your organization's
# # name or the intended use of these models
name: 'terence_dbt_project'
version: '1.0.0'
config-version: 2

# # This setting configures which "profile" dbt uses for this project.
# # This is the yml connection reference file in /Users/terence/.dbt/profiles.yml
profile: 'dbt_learn_snowflake_db' 

# # These configurations specify where dbt should look for different types of files.
# # The `source-paths` config, for example, states that models in this project can be
# # found in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_modules"

# # Configuring models
# # Full documentation: https://docs.getdbt.com/docs/configuring-models

# # In this example config, we tell dbt to build all models in the example/ directory
# # as tables. These settings can be overridden in the individual model files
# # using the `{{ config(...) }}` macro.
# models:
#   my_new_project:
#     # Config indicated by + and applies to all files under models/example/
#     example:
#       +materialized: view

models:
  terence_dbt_project: # name of the project
    # Config indicated by + and applies to all files under models/example/ as default
    example:
        +materialized: view
    new:
        +materialized: table
    pre-hook: "insert into dbt_terence.audit (model, state, time) values ( '{{ this.name }}' ,'starting_model_demployment' ,current_timestamp)"
 #   tags: "nightly" custom tag runs via dbt-run --model tag:nightly
  # snowflake_spend: dbt test -m package: snowflake_spend 
  #   +enabled: true

vars:
    first: True
    second: 2020
    third: 1

on-run-start:
  - "create table if not exists audit (model text, state text, time timestamp_ltz)"

# on-run-end:
#   - 'grant usage on schema analytics.dbt to role analyst'
#   - 'grant select on all tables in schema analytics.dbt to role analyst'
#   - 'grant select on all views in schema analytics.dbt to role analyst'


# dbt_learn_snowflake_db:
#   target: dev
#   outputs:
#     dev:
#       type: snowflake
#       account: xwa29810
#       user: tleung428
#       password: Espn123~!?
#       database: analytics
#       schema: dbt_terence
#       role: sysadmin
#       warehouse: COMPUTE_WH
#       threads: 4
#       client_sessions_keep_alive: false
#       query_tag: dbt-terence

#  target: dev

